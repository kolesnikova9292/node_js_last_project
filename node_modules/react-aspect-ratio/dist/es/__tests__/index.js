"use strict";

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _index = _interopRequireWildcard(require("../index"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// // eslint-disable-line import/no-named-as-default
describe('Aspect Ratio', () => {
  describe('React < 15.6', () => {
    it('should render wrapper for children', () => {
      const innerImage = _react.default.createElement("img", {
        src: "https://foo.bar",
        alt: "demo"
      });

      const node = _reactTestRenderer.default.create(_react.default.createElement(_index.default, {
        ratio: "4/3"
      }, innerImage)).toJSON();

      expect(node).toMatchSnapshot();
    });
    it('should support number as props', () => {
      const innerImage = _react.default.createElement("img", {
        src: "https://foo.bar",
        alt: "demo"
      });

      const node = _reactTestRenderer.default.create(_react.default.createElement(_index.default, {
        ratio: 0.75
      }, innerImage)).toJSON();

      expect(node).toMatchSnapshot();
    });
    it('custom style willl be adpoted', () => {
      const innerImage = _react.default.createElement("img", {
        src: "https://foo.bar",
        alt: "demo"
      });

      const node = _reactTestRenderer.default.create(_react.default.createElement(_index.default, {
        ratio: "4/3",
        style: {
          color: '#fff'
        }
      }, innerImage)).toJSON();

      expect(node).toMatchSnapshot();
    });
  });
  describe('React > 15.6', () => {
    it('should render wrapper for children', () => {
      const innerImage = _react.default.createElement("img", {
        src: "https://foo.bar",
        alt: "demo"
      });

      const node = _reactTestRenderer.default.create(_react.default.createElement(_index.AspectRatio, {
        ratio: "4/3"
      }, innerImage)).toJSON();

      expect(node).toMatchSnapshot();
    });
    it('should support number as props', () => {
      const innerImage = _react.default.createElement("img", {
        src: "https://foo.bar",
        alt: "demo"
      });

      const node = _reactTestRenderer.default.create(_react.default.createElement(_index.AspectRatio, {
        ratio: 0.75
      }, innerImage)).toJSON();

      expect(node).toMatchSnapshot();
    });
    it('custom style willl be adpoted', () => {
      const innerImage = _react.default.createElement("img", {
        src: "https://foo.bar",
        alt: "demo"
      });

      const node = _reactTestRenderer.default.create(_react.default.createElement(_index.AspectRatio, {
        ratio: "4/3",
        style: {
          color: '#fff'
        }
      }, innerImage)).toJSON();

      expect(node).toMatchSnapshot();
    });
  });
});