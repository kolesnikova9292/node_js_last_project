"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const CUSTOM_PROPERTY_NAME = '--aspect-ratio';

class AspectRatio extends _react.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "node", null);

    _defineProperty(this, "setNode", node => {
      this.node = node;
    });
  }

  componentDidUpdate() {
    if (this.node) {
      const node = this.node; // BC for older version of React https://github.com/facebook/react/issues/6411
      // check if React support custom property AFTER

      const customPropertyValue = node.style.getPropertyValue(CUSTOM_PROPERTY_NAME);

      if (!customPropertyValue) {
        node.style.setProperty(CUSTOM_PROPERTY_NAME, `(${this.props.ratio})`);
      }
    }
  }

  render() {
    const _this$props = this.props,
          ratio = _this$props.ratio,
          style = _this$props.style,
          children = _this$props.children,
          otherProps = _objectWithoutPropertiesLoose(_this$props, ["ratio", "style", "children"]); // eslint-disable-line no-unused-vars


    const newStyle = _extends({}, style, {
      // https://github.com/roderickhsiao/react-aspect-ratio/commit/53ec15858ae186c41e70b8c14cc5a5b6e97cb6e3
      [CUSTOM_PROPERTY_NAME]: `(${ratio})`
    });

    return _react.default.createElement("div", _extends({
      ref: this.setNode,
      style: newStyle
    }, otherProps), children);
  }

}

_defineProperty(AspectRatio, "defaultProps", {
  className: 'react-aspect-ratio-placeholder',
  ratio: 1
});

var _default = AspectRatio;
exports.default = _default;